<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Matas/OneDrive/Pulpit/SQLite-projekt/Expenses.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="175"/><column_width id="3" width="1645"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainExpenses"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Expenses" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="116"/><column index="3" value="111"/><column index="4" value="176"/><column index="5" value="222"/><column index="6" value="77"/><column index="7" value="96"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">DROP TABLE Users;
DROP TABLE Expenses;
DROP TABLE Register;


CREATE TABLE IF NOT EXISTS Users(
	Id INTEGER PRIMARY KEY,
	First_name TEXT NOT NULL,
	Last_name TEXT NOT NULL,
	E_mail TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Expenses(
	Id INTEGER PRIMARY KEY,
	Transport REAL,
	Materials REAL,
	Foreign_Service REAL,
	Administrative_fees REAL,
	Other REAL,
	User_id INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Register(
	Id INTEGER PRIMARY KEY,
	User_id INTEGER,
	Expenses_id INTEGER,
	Date_operation DATE,
	FOREIGN KEY (User_id) REFERENCES Users(id),
	FOREIGN KEY (Expenses_id) REFERENCES Expenses(id)
	);


INSERT INTO Users(First_name, Last_name, E_mail)
VALUES ('Adam', 'Smith', 'AS@company.com'),
		('Bob', 'Clemens', 'bob@company.com'),
		('Richard', 'New', 'Rich@company.com'),
		('Gregory', 'Sky', 'Greg@mail.com');
		
SELECT * FROM Users;

-- Insert Expenses
INSERT INTO Expenses(Transport, User_id)
VALUES (1250, 1);

INSERT INTO Expenses(Materials, User_id)
VALUES (250, 4);

INSERT INTO Expenses(Foreign_Service, User_id)
VALUES (150, 2);

INSERT INTO Expenses(Administrative_fees, User_id)
VALUES (340, 2);

INSERT INTO Expenses(Other, User_id)
VALUES (1000, 4),
		(240, 1),
		(120.99, 3);

SELECT * FROM Expenses;

-- INSERT INTO Register (User_id, Expenses_id, Date_operation)
-- VALUES ()

SELECT * FROM Register;

SELECT U.First_name, 
U.Last_name, 
E.Transport, 
E.Materials, 
E.Foreign_Service, 
E.Adrministrative_fees, 
E.Other 
FROM Users AS U 
INNER JOIN 
Expenses AS E 
ON U.Id = E.User_id;
</sql><sql name="Drop-tables.sql">DROP TABLE Users;
DROP TABLE Expenses;
DROP TABLE Register;</sql><sql name="Create-tables.sql">CREATE TABLE IF NOT EXISTS Users(
	Id INTEGER PRIMARY KEY,
	First_name TEXT NOT NULL,
	Last_name TEXT NOT NULL,
	E_mail TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Expenses(
	Id INTEGER PRIMARY KEY,
	Transport REAL,
	Materials REAL,
	Foreign_Service REAL,
	Administrative_fees REAL,
	Other REAL,
	User_id INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Register(
	Id INTEGER PRIMARY KEY,
	User_id INTEGER,
	Expenses_id INTEGER,
	Date_operation DATE,
	FOREIGN KEY (User_id) REFERENCES Users(id),
	FOREIGN KEY (Expenses_id) REFERENCES Expenses(id)
	);</sql><sql name="Insert-values.sql">-- Insert Uders

INSERT INTO Users(First_name, Last_name, E_mail)
VALUES ('Adam', 'Smith', 'AS@company.com'),
		('Bob', 'Clemens', 'bob@company.com'),
		('Richard', 'New', 'Rich@company.com'),
		('Gregory', 'Sky', 'Greg@mail.com');
		
SELECT * FROM Users;

-- Insert Expenses
INSERT INTO Expenses(Transport, User_id)
VALUES (1250, 1);

INSERT INTO Expenses(Materials, User_id)
VALUES (250, 4);

INSERT INTO Expenses(Foreign_Service, User_id)
VALUES (150, 2);

INSERT INTO Expenses(Administrative_fees, User_id)
VALUES (340, 2);

INSERT INTO Expenses(Other, User_id)
VALUES (1000, 4),
		(240, 1),
		(120.99, 3);

SELECT * FROM Expenses;

-- Insert Register 

INSERT INTO Register(User_id, Expenses_id, Date_operation)
VALUES (1, 1, '2023-10-10'),
		(4, 2, '2023-10-10'),
		(2, 3, '2023-10-11'),
		(2,4, '2023-10-11'),
		(4,5, '2023-10-11'),
		(1,6, '2023-10-13'),
		(3,7, '2023-10-14')

SELECT * FROM Register;
		</sql><sql name="Inner_join.sql">-- Expenses
SELECT U.First_name, 
U.Last_name, 
E.Transport, 
E.Materials, 
E.Foreign_Service, 
E.Adrministrative_fees, 
E.Other 
FROM Users AS U 
INNER JOIN 
Expenses AS E 
ON U.Id = E.User_id;

-- Register 
SELECT Users.First_name, Users.Last_name, Expenses.Transport, Expenses.Materials, Expenses.Other, Register.Date_operation
FROM Users INNER JOIN Expenses ON 
Users.Id = Expenses.User_id INNER JOIN 
Register ON Expenses.Id = 
Register.Expenses_id
WHERE Transport IS NOT NULL OR Materials IS NOT NULL OR Other IS NOT NULL;
</sql><current_tab id="4"/></tab_sql></sqlb_project>
